// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved. // SPDX-License-Identifier: MIT-0
syntax = "proto3";

package AWS.LookoutVision.Edge;

option java_package = "com.amazonaws.lookoutvision.edge";

service InferenceServer {

  rpc DetectAnomalies(DetectAnomaliesRequest) returns (DetectAnomaliesResponse);

  rpc StartModel(StartModelRequest) returns (StartModelResponse);

  rpc StopModel(StopModelRequest) returns (StopModelResponse);

  rpc ListModels(ListModelsRequest) returns (ListModelsResponse);

  rpc DescribeModel(DescribeModelRequest) returns (DescribeModelResponse);
}

message SharedMemoryHandle {
  uint64 size = 1;
  uint64 offset = 2;
  // name of the POSIX shared memory segment.
  string name = 3;
}

message Bitmap {
  int32 width = 1;
  int32 height = 2;
  oneof data {
    bytes byte_data = 3;
    SharedMemoryHandle shared_memory_handle = 4;
  }
}

message DetectAnomaliesRequest {
  string model_component = 1;
  Bitmap bitmap = 2;
}

message DetectAnomalyResult {
  bool is_anomalous = 1;
  float confidence = 2;
}

message DetectAnomaliesResponse {
  DetectAnomalyResult detect_anomaly_result = 1;
}

enum ModelStatus {
  STOPPED = 0;
  STARTING = 1;
  RUNNING = 2;
  FAILED = 3;
  STOPPING = 4;
}

message ModelDescription {
  string model_component = 1;
  string lookout_vision_model_arn = 2;
  ModelStatus status = 3;
  string status_message = 4;
}

message ModelMetadata {
  string model_component = 1;
  string lookout_vision_model_arn = 2;
  ModelStatus status = 3;
  string status_message = 4;
}

message StartModelRequest {
  string model_component = 1;
}

message StartModelResponse {
  ModelStatus status = 1;
}

message StopModelRequest {
  string model_component = 1;
}

message StopModelResponse {
  ModelStatus status = 1;
}

message ListModelsRequest {}

message ListModelsResponse {
  repeated ModelMetadata models = 1;
}

message DescribeModelRequest {
  string model_component = 1;
}

message DescribeModelResponse {
  ModelDescription model_description = 1;
}